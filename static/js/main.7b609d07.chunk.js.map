{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","Chat","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","displayName","add","text","createdAt","FieldValue","serverTimestamp","className","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","autofocus","onClick","signOut","props","messageClass","split","toLowerCase","SignIn","provider","GoogleAuthProvider","signInWithPopup","App","useAuthState","user","ReactDOM","render","document","getElementById"],"mappings":"6NAcaA,G,YAVOC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGGR,IAASD,QAChBU,EAAWT,IAASU,Y,wBCEjC,SAASC,IACP,IAAMC,EAAQC,mBAERC,EAAcL,EAASM,WAAW,YAClCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IACrD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEW7B,EAAK8B,YAA1BC,EAFU,EAEVA,IAAKC,EAFK,EAELA,YAFK,SAIZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAWlC,IAASU,UAAUyB,WAAWC,kBACzCL,cACAD,QARgB,OAWlBN,EAAa,IAXK,2CAAH,sDAcjB,OACE,sBAAKa,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACGhB,GACCA,EAASiB,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAC9C,qBAAKC,IAAK/B,OAEZ,mCACE,kCAAQb,EAAK8B,YAAYE,YAAzB,sBACA,sBAAMa,SAAUnB,EAAhB,SACE,uBACEY,UAAU,MACVK,GAAG,UACHG,MAAOtB,EACPuB,SAAU,SAACpB,GAAD,OAAOF,EAAaE,EAAEqB,OAAOF,QACvCG,UAAU,WAGd,wBAAQX,UAAU,MAAMY,QAAS,kBAAMlD,EAAKmD,WAA5C,4BAQR,SAASV,EAAYW,GACnB,MAAmCA,EAAMV,QAAjCR,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,YACbqB,EAAetB,IAAQ/B,EAAK8B,YAAYC,IAAM,OAAS,WAC7D,OACE,qBAAKO,UAAS,kBAAae,GAA3B,SACE,8BACGrB,EAAYsB,MAAM,KAAK,GAAGC,cAD7B,KAC8CrB,OAMpD,SAASsB,IAMP,OACE,qBAAKlB,UAAU,aAAf,SACE,wBAAQA,UAAU,MAAMY,QAP5B,WACE,IAAMO,EAAW,IAAIxD,IAASD,KAAK0D,mBACnC1D,EAAK2D,gBAAgBF,IAKnB,uBAOSG,MArFf,WACE,MAAeC,YAAa7D,GAArB8D,EAAP,oBACA,OACE,qBAAKxB,UAAU,MAAf,SACE,8BAAMwB,EAAO,cAAClD,EAAD,IAAW,cAAC4C,EAAD,SCR9BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b609d07.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAIRsRlGnUrRpxYcUUklk76Ej3cUeYhWO0\",\r\n  authDomain: \"terminal-chat-val8119.firebaseapp.com\",\r\n  projectId: \"terminal-chat-val8119\",\r\n  storageBucket: \"terminal-chat-val8119.appspot.com\",\r\n  messagingSenderId: \"606376017489\",\r\n  appId: \"1:606376017489:web:2e8d372e5cd2719abb4270\",\r\n  measurementId: \"G-FMPES68B74\",\r\n});\r\n\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.firestore();\r\n","import \"./App.css\";\nimport { auth } from \"./firebase.js\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from \"firebase/compat/app\";\nimport React, { useState, useRef } from \"react\";\nimport { database } from \"./firebase\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <div>{user ? <Chat /> : <SignIn />}</div>\n    </div>\n  );\n}\n\nfunction Chat() {\n  const dummy = useRef();\n\n  const messagesRef = database.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(75);\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const { uid, displayName } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      displayName,\n      uid,\n    });\n    // dummy.current.scrollIntoView({ behavior: \"smooth\" });\n    setFormValue(\"\");\n  };\n\n  return (\n    <div className=\"App crt\">\n      <div className=\"ChatBox\">\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy}></div>\n      </div>\n      <footer>\n        <label>{auth.currentUser.displayName}@terminal-chat &gt;</label>\n        <form onSubmit={sendMessage}>\n          <input\n            className=\"crt\"\n            id=\"TextBox\"\n            value={formValue}\n            onChange={(e) => setFormValue(e.target.value)}\n            autofocus=\"true\"\n          ></input>\n        </form>\n        <button className=\"crt\" onClick={() => auth.signOut()}>\n          SIGN OUT\n        </button>\n      </footer>\n    </div>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, displayName } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n  return (\n    <div className={`message ${messageClass}`}>\n      <p>\n        {displayName.split(\" \")[0].toLowerCase()}: {text}\n      </p>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"SignIn crt\">\n      <button className=\"crt\" onClick={signInWithGoogle}>\n        SIGN IN\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n<div className=\"App crt\">\n      <div className=\"message received\">\n        <p>user1: hello</p>\n      </div>\n      <div className=\"message received\">\n        <p>monkey69: hi</p>\n      </div>\n      <div className=\"message sent\">\n        <p>val: heyo</p>\n      </div>\n      <div className=\"message received\">\n        <p>helloworld: test</p>\n      </div>\n      <footer>\n        <label>val@terminal-chat &gt; </label>\n        <input className=\"crt\"></input>\n        <button className=\"crt\">SIGN OUT</button>\n      </footer>\n    </div>\n*/\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}